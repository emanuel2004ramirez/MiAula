<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>MiAula - Calificación</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 0;
            min-height: 100vh;
        }

        header {
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white;
            padding: 25px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

            header h1 {
                margin: 0;
                font-size: 2.5em;
                font-weight: 300;
                letter-spacing: 2px;
            }

        .container {
            max-width: 1000px;
            margin: 30px auto;
            background-color: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        }

        h2.section-title {
            border-left: 5px solid #4CAF50;
            padding-left: 15px;
            margin-bottom: 25px;
            color: #2c3e50;
            font-size: 1.8em;
            font-weight: 500;
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 30px;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        th, td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
        }

        th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.9em;
            letter-spacing: 1px;
        }

        tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        tr:hover {
            background-color: #e3f2fd;
            transition: background-color 0.3s ease;
        }

        .task-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 10px;
        }

        .task-detail {
            background-color: #f1f3f4;
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 0.9em;
        }

            .task-detail strong {
                color: #1976d2;
            }

        input[type="number"], textarea {
            padding: 12px;
            width: 100%;
            margin-top: 8px;
            margin-bottom: 12px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 14px;
            background-color: white;
            color: #2c3e50;
            transition: all 0.3s ease;
        }

            input[type="number"]:focus, textarea:focus {
                border-color: #4CAF50;
                outline: none;
                box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
                background-color: #f9fff9;
                color: #1b5e20;
            }

            input[type="number"]:read-only, textarea:read-only {
                background-color: #e8f5e8;
                border-color: #4CAF50;
                color: #2e7d32;
                font-weight: 500;
            }

            input[type="number"]::placeholder, textarea::placeholder {
                color: #757575;
                opacity: 1;
            }

        textarea {
            resize: vertical;
            min-height: 60px;
        }

        button {
            background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 8px;
            cursor: pointer;
            margin-top: 8px;
            font-weight: 600;
            font-size: 14px;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

            button:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);
            }

            button:disabled {
                background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
                cursor: not-allowed;
                transform: none;
                box-shadow: none;
                opacity: 0.8;
            }

        .btn-link {
            background: linear-gradient(135deg, #2196F3 0%, #1976D2 100%);
            margin-top: 30px;
            width: 100%;
            padding: 15px;
            font-size: 16px;
        }

            .btn-link:hover {
                background: linear-gradient(135deg, #1976D2 0%, #1565C0 100%);
            }

        .no-data {
            text-align: center;
            color: #666;
            font-style: italic;
            padding: 30px;
            background-color: #f8f9fa;
            border-radius: 8px;
        }

        .exam-info, .task-actions {
            background-color: #fff;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #e0e0e0;
        }

        .exam-info {
            background: linear-gradient(135deg, #e3f2fd 0%, #f3e5f5 100%);
        }

        .value-badge {
            display: inline-block;
            background: linear-gradient(135deg, #FF9800 0%, #F57C00 100%);
            color: white;
            padding: 4px 8px;
            border-radius: 15px;
            font-size: 0.8em;
            font-weight: 600;
        }

        footer {
            text-align: center;
            padding: 20px;
            background-color: rgba(255,255,255,0.1);
            color: white;
            margin-top: 40px;
            backdrop-filter: blur(10px);
        }

        .success-indicator {
            color: #4CAF50;
            font-weight: 600;
        }
    </style>
</head>
<body>
    <header>
        <h1>MiAula</h1>
        <p style="margin: 0; opacity: 0.9; font-size: 1.1em;">Sistema de Calificaciones</p>
    </header>

    <div class="container">
        <form id="calificacionForm" action="Calificar_Tareas" method="post">
            <input type="hidden" id="id_clase" name="id_clase" value="@(Model.id_clase)" />
            <input type="hidden" id="id_alumno" name="id_alumno" value="@(Model.alumno.Id)" />

            <h2 class="section-title">📝 Examen</h2>
            <table>
                <thead>
                    <tr>
                        <th style="width: 25%;">Nombre del Examen</th>
                        <th style="width: 15%;">Fecha</th>
                        <th style="width: 10%;">Valor Máximo</th>
                        <th style="width: 50%;">Calificación</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.examen != null)
                    {
                        <tr>
                            <td><strong>@Model.examen.Nombre</strong></td>
                            <td>@Model.examen.Fecha</td>
                            <td><span class="value-badge">@Model.examen.Valor pts</span></td>
                            <td>
                                <div class="exam-info">
                                    <label for="nota_examen">Nota obtenida (0 - @Model.examen.Valor):</label>
                                    <input type="number" id="nota_examen" name="nota_examen" min="0" max="@Model.examen.Valor" step="0.1" required placeholder="Ingrese la nota">
                                    <label for="comentario_examen">Comentarios:</label>
                                    <textarea id="comentario_examen" name="comentario_examen" rows="3" placeholder="Comentarios sobre el desempeño del estudiante (opcional)"></textarea>
                                    <button type="button" id="Btn_examen" onclick="AgregarNotaExamen(@Model.examen.Valor)">📊 Registrar Calificación</button>
                                </div>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="no-data">📋 No hay examen asignado para esta clase.</td>
                        </tr>
                    }
                </tbody>
            </table>

            <h2 class="section-title">📚 Tareas Asignadas</h2>
            <table>
                <thead>
                    <tr>
                        <th style="width: 8%;">ID</th>
                        <th style="width: 25%;">Información de la Tarea</th>
                        <th style="width: 12%;">Valor</th>
                        <th style="width: 55%;">Calificación</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.tareas != null && Model.tareas.Count > 0)
                    {
                        @foreach (var p in Model.tareas)
                        {
                            <tr>
                                <td><strong>#@p.Id_Tarea</strong></td>
                                <td>
                                    <div class="task-info">
                                        <div class="task-detail">
                                            <strong>Tema:</strong> @p.Tema
                                        </div>
                                        <div class="task-detail">
                                            <strong>Tipo:</strong> @p.Tipo
                                        </div>
                                    </div>
                                </td>
                                <td><span class="value-badge">@p.Valor pts</span></td>
                                <td>
                                    <div class="task-actions">
                                        <label for="nota_Tarea_@p.Id_Tarea">Nota obtenida (0 - @p.Valor):</label>
                                        <input type="number" id="nota_Tarea_@p.Id_Tarea" name="nota_Tarea_@p.Id_Tarea" min="0" max="@p.Valor" step="0.1" required placeholder="Ingrese la nota">
                                        <label for="comentario_@p.Id_Tarea">Comentarios:</label>
                                        <textarea id="comentario_@p.Id_Tarea" name="comentario_@p.Id_Tarea" rows="2" placeholder="Comentarios sobre la tarea (opcional)"></textarea>
                                        <button type="button" id="Btn_@p.Id_Tarea" onclick="AgregarNota(@p.Id_Tarea, @p.Valor)">📊 Registrar Calificación</button>
                                        <input type="hidden" name="id_Tarea" value="@p.Id_Tarea" />
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="no-data">📝 No hay tareas asignadas para esta clase.</td>
                        </tr>
                    }
                </tbody>
            </table>

            <button type="submit" class="btn-link">✅ Finalizar y Guardar Calificaciones</button>
        </form>
    </div>

    <footer>
        <p>&copy; 2024 MiAula - Sistema de Gestión Educativa</p>
    </footer>

    <script>
        let calificacion_Tarea = [];
        let examenData = null;

        function AgregarNota(id_Tarea, valorMaximo) {
            const notaInput = document.getElementById(`nota_Tarea_${id_Tarea}`);
            const comentarioInput = document.getElementById(`comentario_${id_Tarea}`);
            const boton = document.getElementById(`Btn_${id_Tarea}`);

            const nota = parseFloat(notaInput.value);
            const comentario = comentarioInput.value.trim();

            if (isNaN(nota) || nota < 0 || nota > valorMaximo) {
                alert(`⚠️ La nota debe estar entre 0 y ${valorMaximo} puntos.`);
                notaInput.focus();
                return;
            }

            calificacion_Tarea.push({
                id_tarea: id_Tarea,
                nota: nota,
                comentario: comentario
            });

            notaInput.readOnly = true;
            comentarioInput.readOnly = true;
            boton.innerHTML = '<span class="success-indicator">✅ Calificación Registrada</span>';
            boton.disabled = true;

            // Agregar efecto visual de éxito
            boton.style.transform = 'scale(1.05)';
            setTimeout(() => {
                boton.style.transform = 'scale(1)';
            }, 200);
        }

        function AgregarNotaExamen(valorMaximo) {
            const notaInput = document.getElementById("nota_examen");
            const comentarioInput = document.getElementById("comentario_examen");
            const boton = document.getElementById("Btn_examen");

            const nota = parseFloat(notaInput.value);
            const comentario = comentarioInput.value.trim();

            if (isNaN(nota) || nota < 0 || nota > valorMaximo) {
                alert(`⚠️ La nota del examen debe estar entre 0 y ${valorMaximo} puntos.`);
                notaInput.focus();
                return;
            }

            examenData = {
                nota: nota,
                comentario: comentario
            };

            notaInput.readOnly = true;
            comentarioInput.readOnly = true;
            boton.innerHTML = '<span class="success-indicator">✅ Calificación Registrada</span>';
            boton.disabled = true;

            // Agregar efecto visual de éxito
            boton.style.transform = 'scale(1.05)';
            setTimeout(() => {
                boton.style.transform = 'scale(1)';
            }, 200);
        }

        document.getElementById('calificacionForm').addEventListener('submit', function (event) {
            event.preventDefault();

            // Validar que al menos una calificación haya sido agregada
            if (calificacion_Tarea.length === 0 && !examenData) {
                alert('⚠️ Debe agregar al menos una calificación antes de enviar.');
                return;
            }

            calificacion_Tarea.forEach((calificacion, index) => {
                for (let key in calificacion) {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = `calificaciones_tareas[${index}].${key}`;
                    input.value = calificacion[key];
                    this.appendChild(input);
                }
            });

            if (examenData) {
                for (let key in examenData) {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = `calificacion_examen.${key}`;
                    input.value = examenData[key];
                    this.appendChild(input);
                }
            }

            // Mostrar mensaje de confirmación antes de enviar
            if (confirm('¿Está seguro de que desea guardar estas calificaciones? Esta acción no se puede deshacer.')) {
                this.submit();
            }
        });

        // Agregar validación en tiempo real para los campos numéricos
        document.addEventListener('input', function(e) {
            if (e.target.type === 'number') {
                const max = parseFloat(e.target.max);
                const value = parseFloat(e.target.value);

                if (value > max) {
                    e.target.style.borderColor = '#f44336';
                    e.target.style.backgroundColor = '#ffebee';
                    e.target.style.color = '#d32f2f';
                } else if (value >= 0) {
                    e.target.style.borderColor = '#4CAF50';
                    e.target.style.backgroundColor = '#f9fff9';
                    e.target.style.color = '#1b5e20';
                } else {
                    e.target.style.borderColor = '#e0e0e0';
                    e.target.style.backgroundColor = 'white';
                    e.target.style.color = '#2c3e50';
                }
            }
        });
    </script>
</body>
</html>